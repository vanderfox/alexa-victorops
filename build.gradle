buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
        maven {
            url  "http://dl.bintray.com/rvanderwerf/alexa-skills"
        }
        maven {
            url  "http://dl.bintray.com/vanderfox/alexa-skills-kit-java"
        }

    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath "org.grails.plugins:hibernate5:6.0.6"
        classpath 'org.hidetake:gradle-ssh-plugin:2.7.0'
    }
}

version "0.1"
group "alexa.victorops"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"
apply plugin: 'org.hidetake.ssh'

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven {
        url  "http://dl.bintray.com/rvanderwerf/alexa-skills"
    }
    maven {
        url  "http://dl.bintray.com/vanderfox/alexa-skills-kit-java"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if(details.requested.group == 'org.grails' && details.requested.name.startsWith('grails-datastore')) {
            details.useVersion("6.0.7.BUILD-SNAPSHOT")
        }
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    runtime "com.h2database:h2"
    // alexa stuff
    compile 'org.grails.plugins:alexa-skills:0.1.2'
    compile 'org.grails.plugins:aws-sdk:1.10.74'
    // spring security stuff
    compile "org.grails.plugins:spring-security-ui:3.0.0.M2"
    compile 'org.grails.plugins:spring-security-oauth2-provider:3.0.0-RC1'
    compile 'org.grails.plugins:mail:2.0.0.RC6'
    // rest stuff
    compile('org.apache.httpcomponents:httpclient:4.5.2') {
        force = true
    }
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2', {
        exclude module: "groovy"
        exclude module: "xml-apis"
    }

    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}


assets {
    minifyJs = true
    minifyCss = true
}

remotes {
    deadpool {
        identity = file('../.ssh/id_rsa')
        host = 'deadpool.vanderfox.com'
        user = 'root'
    }
}

task deploy << {
    ssh.run {
        session(remotes.deadpool) {
            put from: 'build/libs/alexa-victorops-0.1.war', into: '/opt/tomcat/webapps/victorops.war'
            execute 'sudo service tomcat restart'
        }
    }
}
